{% set var_is_app = params.type == 'app' %}
{% set var_is_web = params.type == 'web' %}
{% set var_is_db = params.type == 'db' %}
{% set var_is_redis = params.type == 'redis' %}

{% set var_is_internal_redis = params.internal_redis | default(false) | bool %}
{% set var_db_same_host = params.db_same_host | default(false) | bool %}
{% set var_redis_same_host = params.redis_same_host | default(false) | bool %}

{% set var_db = var_is_app or var_is_db %}
{% set var_redis = var_is_app or var_is_redis or (var_is_web and var_is_internal_redis) %}
{% set var_web = var_is_app or var_is_web %}

{% set var_use_ssl = var_web and (params.use_ssl | default(false) | bool) %}
{% set var_use_s3_backup = var_web and (params.use_s3_backup | default(false) | bool) %}
{% set var_use_s3_uploads = var_web and (params.use_s3_uploads | default(false) | bool) %}

templates:

  {####################################}
  {% if var_db %}

  - "templates/postgres.template.yml"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_redis %}

  - "templates/redis.template.yml"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_web %}

  - "templates/web.template.yml"
  - "templates/web.ratelimited.template.yml"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_use_ssl %}

  - "templates/web.ssl.template.yml"
  - "templates/web.letsencrypt.ssl.template.yml"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_web %}
  {% for template in (params.templates | default([])) %}

  - "{{ template }}"

  {% endfor %}
  {% endif %}
  {####################################}

{####################################}
{% if var_is_db and (not var_db_same_host) %}

expose:
  - "5432:5432"

{% endif %}
{####################################}

{####################################}
{% if var_is_redis and (not var_redis_same_host) %}

expose:
  - "6379:6379"

{% endif %}
{####################################}

{####################################}
{% if var_is_app or var_is_web %}

expose:
  - "80:80"
  - "443:443"

{% endif %}
{####################################}

{####################################}
{% if var_is_web and (var_db_same_host or (var_redis_same_host and (not var_is_internal_redis))) %}

links:

  {% if var_is_web and var_db_same_host %}

  - link:
      name: db
      alias: db

  {% endif %}


  {% if var_is_web and (not var_is_internal_redis) and var_redis_same_host %}

  - link:
      name: redis
      alias: redis

  {% endif %}

{% endif %}
{####################################}

params:
  db_default_text_search_config: "{{ params.db_default_text_search_config | default('pg_catalog.english') }}"

  {####################################}
  {% if (params.db_shared_buffers | default('')) != '' %}

  db_shared_buffers: "{{ params.db_shared_buffers | default('') }}"

  {% endif %}
  {####################################}

  db_work_mem: "40MB"
  version: "{{ params.version | default('tests-passed') }}"
env:
  LANG: "{{ params.lang | default('en_US.UTF-8') }}"
  DISCOURSE_DEFAULT_LOCALE: "{{ params.discourse_default_locale | default('en') }}"

  {####################################}
  {% if var_web %}

  ### General ###
  UNICORN_WORKERS: "{{ params.unicorn_workers | default('2') }}"
  DISCOURSE_HOSTNAME: "{{ params.discourse_hostname | default('') }}"
  DISCOURSE_DEVELOPER_EMAILS: "{{ params.discourse_developer_emails | default('') }}"
  DISCOURSE_CDN_URL: "{{ params.discourse_cdn_url | default('') }}"
  DISCOURSE_MAXMIND_LICENSE_KEY: "{{ params.discourse_maxmind_license_key | default('') }}"

  ### SMTP ###
  DISCOURSE_SMTP_ADDRESS: "{{ credentials.discourse_smtp.address }}"
  DISCOURSE_SMTP_PORT: "{{ credentials.discourse_smtp.port }}"
  DISCOURSE_SMTP_ENABLE_START_TLS: "{{ credentials.discourse_smtp.enable_start_tls | default('') | lower }}"
  DISCOURSE_SMTP_USER_NAME: "{{ credentials.discourse_smtp.username }}"
  DISCOURSE_SMTP_PASSWORD: "{{ credentials.discourse_smtp.password }}"
  DISCOURSE_SMTP_DOMAIN: "{{ params.discourse_smtp_domain | default('') }}"
  DISCOURSE_NOTIFICATION_EMAIL: "{{ params.discourse_notification_email | default('') }}"

  ### Backups ###
  DISCOURSE_ENABLE_BACKUPS: "true"
  DISCOURSE_MAXIMUM_BACKUPS: {{ params.maximum_backups | default('14') }}
  DISCOURSE_BACKUP_FREQUENCY: {{ params.backup_frequency | default('1') }}

  {% endif %}
  {####################################}

  {####################################}
  {% if var_use_ssl %}

  # SSL/TLS
  LETSENCRYPT_ACCOUNT_EMAIL: "{{ params.ssl_email }}"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_use_s3_backup or var_use_s3_uploads %}

  # S3 General Settings
  DISCOURSE_S3_ACCESS_KEY_ID: "{{ credentials.discourse_s3.access_key }}"
  DISCOURSE_S3_SECRET_ACCESS_KEY: "{{ credentials.discourse_s3.secret_key }}"
  DISCOURSE_S3_REGION: "{{ credentials.discourse_s3.region | default('us-east-1') }}"
  DISCOURSE_S3_ENDPOINT: "{{ credentials.discourse_s3.endpoint }}"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_use_s3_backup %}

  ### S3 Backup ###
  DISCOURSE_BACKUP_LOCATION: "s3"
  DISCOURSE_S3_BACKUP_BUCKET: "{{ params.discourse_s3_backup_bucket }}"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_use_s3_uploads %}

  ### S3 Uploads ###
  DISCOURSE_USE_S3: true
  DISCOURSE_S3_BUCKET: "{{ params.discourse_s3_bucket }}"
  DISCOURSE_S3_CDN_URL: "{{ params.discourse_s3_cdn_url | default('') }}"
  DISCOURSE_S3_HTTP_CONTINUE_TIMEOUT:  "{{ params.discourse_s3_http_continue_timeout | default('') }}"
  DISCOURSE_S3_INSTALL_CORS_RULE: "{{ params.discourse_s3_install_cors_rule | default('') | lower }}"
  DISCOURSE_S3_CONFIGURE_TOMBSTONE_POLICY: "{{ params.discourse_s3_configure_tombstone_policy | default('') | lower }}"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_is_web and var_db_same_host %}

  ### DB (Same Host) ###
  DISCOURSE_DB_HOST: "db"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_is_web and (not var_db_same_host) %}

  ### DB (Different Host) ###
  DISCOURSE_DB_HOST: "{{ input.dependencies.db.host | urlsplit('hostname') }}"
  DISCOURSE_DB_PORT: {{ input.dependencies.db.host | urlsplit('port') | default(5432, true) }}

  {% endif %}
  {####################################}

  {####################################}
  {% if var_is_web %}

  ### DB ###
  DISCOURSE_DB_USERNAME: "{{ credentials.db.db_name | default('discourse') }}"
  DISCOURSE_DB_PASSWORD: "{{ credentials.db.db_pass }}"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_is_web and var_redis_same_host and (not var_is_internal_redis) %}

  ### Redis (Same Host) ###
  DISCOURSE_REDIS_HOST: "redis"

  {% endif %}
  {####################################}

  {####################################}
  {% if var_is_web and (not var_redis_same_host) and (not var_is_internal_redis) %}

  ### Redis (Different Host) ###
  DISCOURSE_REDIS_HOST: "{{ input.dependencies.redis.host | urlsplit('hostname') }}"
  DISCOURSE_REDIS_PORT: {{ input.dependencies.redis.host | urlsplit('port') | default(6379, true) }}

  {% endif %}
  {####################################}

  {####################################}
  {% for env_item in (params.env | default({}) | dict2items | list) %}

  {{ env_item.key | upper }}: {{ env_item.value | to_json }}

  {% endfor %}
  {####################################}

volumes:
  - volume:
      host: /var/discourse/shared/{{ params.type }}
      guest: /shared
  - volume:
      host: /var/discourse/shared/{{ params.type }}/log/var-log
      guest: /var/log

{####################################}
{% if var_use_s3_uploads or ((params.plugins | default([]) | length) > 0) or var_is_db %}

hooks:

  {####################################}
  {% if var_use_s3_uploads %}

  after_assets_precompile:
    - exec:
        cd: $home
        cmd:
          - sudo -E -u discourse bundle exec rake s3:upload_assets

  {% endif %}
  {####################################}

  {####################################}
  {% if (params.plugins | default([]) | length) > 0 %}

  after_code:
    - exec:
        cd: $home/plugins
        cmd:

        {####################################}
        {% for plugin in (params.plugins | default([])) %}

          - git clone {{ plugin }}

        {% endfor %}
        {####################################}

  {% endif %}
  {####################################}

  {####################################}
  {% if var_is_db %}

  after_postgres:
    - exec:
        stdin: |
          alter user discourse with password '{{ credentials.db.db_pass }}';
        cmd: su - postgres -c 'psql discourse'
        raise_on_fail: false

  {% endif %}
  {####################################}

{% endif %}
{####################################}

run:
  - exec: echo "Beginning of custom commands"

  {####################################}
  {% for command in (params.commands | default([])) %}

  - exec: {{ command | to_json }}

  {% endfor %}
  {####################################}

  - exec: echo "End of custom commands"
