root: "user_data_schema"
schemas:
  user_data_schema:
    type: "dict"
    description: "schema for the user data (used to run instructions in a newly created host)"
    props:
      params:
        schema: "params"
        description: "user data parameters"
      credentials:
        schema: "credentials"
        non_empty: true
        description: "user data credentials"
      contents:
        schema: "contents"
        non_empty: true
        description: "user data contents"
  params:
    type: "dict"
    description: "user data parameters schema"
    props:
      user_directories:
        type: "list"
        elem_type: "str"
        description: "list of directories to be created owned by the user"
      install_docker:
        type: "bool"
        description: "when true, installs docker in the host; defaults to false"
      install_podman:
        type: "bool"
        description: "when true, installs podman in the host; defaults to false"
      install_node_exporter:
        type: "bool"
        description: "when true, installs node_exporter in the host; defaults to false"
      install_packages:
        type: "bool"
        description: "when true, installs some utilities in the host; defaults to false"
      docker_compose_version:
        type: "str"
        description: "docker compose version to be installed after installing docker"
  credentials:
    type: "dict"
    description: "user data credentials schema"
    props:
      node:
        schema: "node_credential"
        non_empty: true
        description: "credential used for the node"
  node_credential:
    type: "dict"
    lax: true
    description: "schema used for the credential used for the node"
    props:
      host_user:
        type: "str"
        non_empty: true
        description: "user that will be created in the host"
      host_pass:
        type: "str"
        non_empty: true
        description: "password for user that will be created in the host"
  contents:
    type: "dict"
    description: "user data contents schema"
    required: true
    props:
      host_ssh_public_keys:
        type: "str"
        regex: "^((ssh-rsa .*)[\\n])*((ssh-rsa .*)[\\n]?)?$"
        description: "string in which each line is a ssh public key"
