- name: "{{ inner_service_title }} - aws db (rds) - vars"
  lrd.ext_cloud.vars:
    identifier: "aws_db"
    raw_data:
      namespace: "ext_db"
      state: "{{ inner_service_state }}"
      params: "{{ inner_service_params }}"
      credentials: "{{ inner_service_credentials }}"
      contents: "{{ inner_service_contents }}"
  register: ext_db_data_wrapper
  no_log: "{{ env_no_log }}"
  tags: ["no_print"]

- name: "{{ inner_service_title }} - aws db (rds) - create cluster(s)"
  community.aws.rds_cluster:
    state: "present"
    db_cluster_identifier: "{{ ext_db_item.cluster }}"
    access_key: "{{ ext_db_item.access_key }}"
    secret_key: "{{ ext_db_item.secret_key }}"
    region: "{{ ext_db_item.region | default(omit) }}"
    engine: "{{ ext_db_item.engine | default(omit) }}"
    master_username: "{{ ext_db_item.master_username | default(omit) }}"
    master_user_password: "{{ ext_db_item.master_user_password | default(omit) }}"
    tags:
      Name: "cluster-{{ ext_db_item.cluster }}"
  loop: "{{ ext_db_data_wrapper.data.list }}"
  loop_control:
    loop_var: ext_db_item
    label: "{{ ext_db_item.cluster | default('---') }} <{{ ext_db_item.name }}>"
  when: >-
    (ext_db_item.state == 'present')
    and
    ((ext_db_item.cluster | default('')) != '')
    and
    (ext_db_item.own_cluster | default(false) | bool)
  no_log: "{{ env_no_log }}"

- name: "{{ inner_service_title }} - aws db (rds) - vpc info (for subnet group)"
  amazon.aws.ec2_vpc_net_info:
    access_key: "{{ ext_db_item.access_key }}"
    secret_key: "{{ ext_db_item.secret_key }}"
    region: "{{ ext_db_item.region }}"
    filters:
      "tag:Name": "{{ ext_db_item.vpc_name }}"
  loop: "{{ ext_db_data_wrapper.data.list }}"
  loop_control:
    loop_var: ext_db_item
    label: "{{ ext_db_item.name }}"
  when: >-
    ((ext_db_item.vpc_name | default('')) != '')
    and
    ((ext_db_item.subnet_name | default('')) != '')
    and
    (ext_db_item.state == 'present')
  register: ext_db_vpc_info
  no_log: "{{ env_no_log }}"

- name: "{{ inner_service_title }} - aws db (rds) - subnet info (for subnet group)"
  vars:
    ext_db_item: "{{ ext_db_item_vpn.ext_db_item | default({}) }}"
    ext_vpn_vpc_id: "{{ ext_db_item_vpn.vpcs[0].id | default('') }}"
  amazon.aws.ec2_vpc_subnet_info:
    access_key: "{{ ext_db_item.access_key }}"
    secret_key: "{{ ext_db_item.secret_key }}"
    region: "{{ ext_db_item.region }}"
    filters:
      vpc-id: "{{ ext_vpn_vpc_id }}"
      "tag:Name": "{{ ext_db_item.subnet_name }}"
  loop: "{{ ext_db_vpc_info.results | default([]) }}"
  loop_control:
    loop_var: ext_db_item_vpn
    label: "{{ ext_db_item.name }} ({{ ext_vpn_vpc_id }})"
  when: >-
    ((ext_db_item.subnet_name | default('')) != '')
    and
    (ext_vpn_vpc_id != '')
  register: ext_db_subnet_info
  no_log: "{{ env_no_log }}"

- name: "{{ inner_service_title }} - aws db (rds) - create subnet group"
  vars:
    ext_db_item_vpn: "{{ ext_db_item_subnet.ext_db_item_vpn | default({}) }}"
    ext_db_item: "{{ ext_db_item_vpn.ext_db_item | default({}) }}"
    ext_vpn_subnet_id: "{{ ext_db_item_subnet.subnets[0].id | default('') }}"
  community.aws.rds_subnet_group:
    state: "present"
    access_key: "{{ ext_vpn_item.access_key }}"
    secret_key: "{{ ext_vpn_item.secret_key }}"
    region: "{{ ext_vpn_item.region }}"
    name: "{{ ext_db_item.name }}-subnet-group"
    subnets: ["{{ ext_vpn_subnet_id }}"]
  loop: "{{ ext_db_subnet_info.results | default([]) }}"
  loop_control:
    loop_var: ext_db_item_subnet
    label: "{{ ext_db_item.name }}"
  when: >-
    ((ext_db_item.name | default('')) != '')
    and
    (ext_vpn_subnet_id != '')
  no_log: "{{ env_no_log }}"

- name: "{{ inner_service_title }} - aws db (rds) - main"
  community.aws.rds_instance:
    db_instance_identifier: "{{ ext_db_item.name }}"
    db_cluster_identifier: "{{ ext_db_item.cluster | default(omit) }}"
    access_key: "{{ ext_db_item.access_key }}"
    secret_key: "{{ ext_db_item.secret_key }}"
    allocated_storage: "{{ ext_db_item.allocated_storage | default(omit) }}"
    allow_major_version_upgrade: "{{ ext_db_item.allow_major_version_upgrade | default(omit) }}"
    apply_immediately: "{{ ext_db_item.apply_immediately | default(omit) }}"
    auto_minor_version_upgrade: "{{ ext_db_item.auto_minor_version_upgrade | default(omit) }}"
    availability_zone: "{{ ext_db_item.availability_zone | default(omit) }}"
    backup_retention_period: "{{ ext_db_item.backup_retention_period | default(omit) }}"
    ca_certificate_identifier: "{{ ext_db_item.ca_certificate_identifier | default(omit) }}"
    character_set_name: "{{ ext_db_item.character_set_name | default(omit) }}"
    copy_tags_to_snapshot: "{{ ext_db_item.copy_tags_to_snapshot | default(omit) }}"
    creation_source: "{{ ext_db_item.creation_source | default(omit) }}"
    db_name: "{{ ext_db_item.db_name | default(omit) }}"
    db_parameter_group_name: "{{ ext_db_item.db_parameter_group_name | default(omit) }}"
    db_security_groups: "{{ ext_db_item.db_security_groups | default(omit) }}"
    db_snapshot_identifier: "{{ ext_db_item.db_snapshot_identifier | default(omit) }}"
    db_subnet_group_name: >-
      {{
        ((ext_db_item.subnet_name | default('')) != '')
        | ternary(ext_db_item.name + '-subnet-group', omit)
      }}
    domain: "{{ ext_db_item.domain | default(omit) }}"
    domain_iam_role_name: "{{ ext_db_item.domain_iam_role_name | default(omit) }}"
    enable_cloudwatch_logs_exports: "{{ ext_db_item.enable_cloudwatch_logs_exports | default(omit) }}"
    enable_iam_database_authentication: "{{ ext_db_item.enable_iam_database_authentication | default(omit) }}"
    enable_performance_insights: "{{ ext_db_item.enable_performance_insights | default(omit) }}"
    engine: "{{ ext_db_item.engine | default(omit) }}"
    engine_version: "{{ ext_db_item.engine_version | default(omit) }}"
    final_snapshot_identifier: "{{ ext_db_item.final_snapshot_identifier | default(omit) }}"
    force_failover: "{{ ext_db_item.force_failover | default(omit) }}"
    force_update_password: "{{ ext_db_item.force_update_password | default(omit) }}"
    instance_type: "{{ ext_db_item.instance_type | default(omit) }}"
    iops: "{{ ext_db_item.iops | default(omit) }}"
    kms_key_id: "{{ ext_db_item.kms_key_id | default(omit) }}"
    license_model: "{{ ext_db_item.license_model | default(omit) }}"
    master_username: >-
      {{
        ((ext_db_item.cluster | default('')) != '')
        | ternary(omit, ext_db_item.master_username | default(omit))
      }}
    max_allocated_storage: "{{ ext_db_item.max_allocated_storage | default(omit) }}"
    monitoring_interval: "{{ ext_db_item.monitoring_interval | default(omit) }}"
    monitoring_role_arn: "{{ ext_db_item.monitoring_role_arn | default(omit) }}"
    multi_az: "{{ ext_db_item.multi_az | default(omit) }}"
    new_db_instance_identifier: "{{ ext_db_item.new_db_instance_identifier | default(omit) }}"
    option_group_name: "{{ ext_db_item.option_group_name | default(omit) }}"
    performance_insights_kms_key_id: "{{ ext_db_item.performance_insights_kms_key_id | default(omit) }}"
    performance_insights_retention_period: "{{ ext_db_item.performance_insights_retention_period | default(omit) }}"
    port: "{{ ext_db_item.port | default(omit) }}"
    preferred_backup_window: "{{ ext_db_item.preferred_backup_window | default(omit) }}"
    preferred_maintenance_window: "{{ ext_db_item.preferred_maintenance_window | default(omit) }}"
    processor_features: "{{ ext_db_item.processor_features | default(omit) }}"
    promotion_tier: "{{ ext_db_item.promotion_tier | default(omit) }}"
    publicly_accessible: "{{ ext_db_item.publicly_accessible | default(omit) }}"
    purge_cloudwatch_logs_exports: "{{ ext_db_item.purge_cloudwatch_logs_exports | default(omit) }}"
    purge_security_groups: "{{ ext_db_item.purge_security_groups | default(omit) }}"
    purge_tags: "{{ ext_db_item.purge_tags | default(omit) }}"
    read_replica: "{{ ext_db_item.read_replica | default(omit) }}"
    region: "{{ ext_db_item.region | default(omit) }}"
    restore_time: "{{ ext_db_item.restore_time | default(omit) }}"
    s3_bucket_name: "{{ ext_db_item.s3_bucket_name | default(omit) }}"
    s3_ingestion_role_arn: "{{ ext_db_item.s3_ingestion_role_arn | default(omit) }}"
    s3_prefix: "{{ ext_db_item.s3_prefix | default(omit) }}"
    security_token: "{{ ext_db_item.security_token | default(omit) }}"
    skip_final_snapshot: "{{ ext_db_item.skip_final_snapshot | default(omit) }}"
    snapshot_identifier: "{{ ext_db_item.snapshot_identifier | default(omit) }}"
    source_db_instance_identifier: "{{ ext_db_item.source_db_instance_identifier | default(omit) }}"
    source_engine: "{{ ext_db_item.source_engine | default(omit) }}"
    source_engine_version: "{{ ext_db_item.source_engine_version | default(omit) }}"
    source_region: "{{ ext_db_item.source_region | default(omit) }}"
    state: "{{ ext_db_item.state | default(omit) }}"
    storage_encrypted: "{{ ext_db_item.storage_encrypted | default(omit) }}"
    storage_type: "{{ ext_db_item.storage_type | default(omit) }}"
    tags: "{{ ext_db_item.tags | default(omit) }}"
    tde_credential_arn: "{{ ext_db_item.tde_credential_arn | default(omit) }}"
    timezone: "{{ ext_db_item.timezone | default(omit) }}"
    use_latest_restorable_time: "{{ ext_db_item.use_latest_restorable_time | default(omit) }}"
    validate_certs: "{{ ext_db_item.validate_certs | default(omit) }}"
    vpc_security_group_ids: "{{ ext_db_item.vpc_security_group_ids | default(omit) }}"
    wait: "{{ ext_db_item.wait | default(omit) }}"
    master_user_password: >-
      {{
        ((ext_db_item.cluster | default('')) != '')
        | ternary(omit, ext_db_item.master_user_password | default(omit))
      }}
    tde_credential_password: "{{ ext_db_item.tde_credential_password | default(omit) }}"
  loop: "{{ ext_db_data_wrapper.data.list }}"
  loop_control:
    loop_var: ext_db_item
    label: "[{{ ext_db_item.state }}] {{ ext_db_item.name }}"
  no_log: "{{ env_no_log }}"

- name: "{{ inner_service_title }} - aws db (rds) - delete subnet group"
  community.aws.rds_subnet_group:
    state: "absent"
    access_key: "{{ ext_db_item.access_key }}"
    secret_key: "{{ ext_db_item.secret_key }}"
    region: "{{ ext_db_item.region }}"
    name: "{{ ext_db_item.name }}-subnet-group"
  loop: "{{ ext_db_data_wrapper.data.list }}"
  loop_control:
    loop_var: ext_db_item
    label: "{{ ext_db_item.name }}"
  when: >-
    (ext_db_item.state == 'absent')
    and
    (((ext_db_item.subnets | default([])) | length) > 0)
  no_log: "{{ env_no_log }}"

- name: "{{ inner_service_title }} - aws db (rds) - delete cluster(s)"
  community.aws.rds_cluster:
    state: "absent"
    db_cluster_identifier: "{{ ext_db_item.cluster }}"
    access_key: "{{ ext_db_item.access_key }}"
    secret_key: "{{ ext_db_item.secret_key }}"
    region: "{{ ext_db_item.region | default(omit) }}"
    skip_final_snapshot: "{{ ext_db_item.skip_final_snapshot | default(omit) }}"
    final_snapshot_identifier: "{{ ext_db_item.final_snapshot_identifier | default(omit) }}"
  loop: "{{ ext_db_data_wrapper.data.list }}"
  loop_control:
    loop_var: ext_db_item
    label: "{{ ext_db_item.cluster | default('---') }} <{{ ext_db_item.name }}>"
  when: >-
    (ext_db_item.state != 'present')
    and
    ((ext_db_item.cluster | default('')) != '')
    and
    (ext_db_item.own_cluster | default(false) | bool)
  no_log: "{{ env_no_log }}"
